name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    name: Build for Linux, Windows and others...
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Cleanup
      run: rm build/* -rfv
      
    - name: Report
      run: |
        ls -lh && \
        ls build -lh && \
        du -sh .

    - name: Build (GitHub)
      run: go build -o Pulseminer.github.default
      
    - name: Build (Windows x32)
      run: GOOS=windows GOARCH=386 go build -o build/pulseminer_win32.exe

    - name: Build (Windows x64)
      run: GOOS=windows GOARCH=amd64 go build -o build/pulseminer_win64.exe

    - name: Build (Linux ARM)
      run: GOOS=linux GOARCH=arm go build -o build/pulseminer_linux_arm

    - name: Build (Linux ARM64)
      run: GOOS=linux GOARCH=arm64 go build -o build/pulseminer_linux_arm64

    - name: Build (Linux i386)
      run: GOOS=linux GOARCH=386 go build -o build/pulseminer_linux_i386

    - name: Build (Linux amd64)
      run: GOOS=linux GOARCH=amd64 go build -o build/pulseminer_linux_amd64
      
    - name: Build (Windows ARM)
      run: GOOS=windows GOARCH=arm go build -o build/pulseminer_windows_arm.exe

    - name: Build (FreeBSD i386)
      run: GOOS=freebsd GOARCH=386 go build -o build/pulseminer_freebsd_i386

    - name: Build (FreeBSD amd64)
      run: GOOS=freebsd GOARCH=amd64 go build -o build/pulseminer_freebsd_amd64

    - name: Test
      run: go test

    - name: Report
      run: |
            ls -lh && \
            ls build -lh && \
            du -sh . 

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.run_id }}
        release_name: Release ${{ github.run_id }}
        body: Hi
        draft: false
        prerelease: false
        
    - name: Upload Release Asset win32
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./pulseminer_win32.exe
        asset_name: pulseminer_win32.exe

    - name: Upload Release Asset win64
      id: upload-release-asset-2
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./pulseminer_win64.exe
        asset_name: pulseminer_win64.exe
 
 #   - name: Deploy
 #     uses: s0/git-publish-subdir-action@develop
 #     env:
 #       REPO: self
 #       BRANCH: build
 #       FOLDER: build
 #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
